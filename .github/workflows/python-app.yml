name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install poetry 1.3.2
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry==1.3.2

    - name: Install dependencies
      run: |
        python -m poetry install

    - name: Run flake8
      run : |
        # stop the build if there are Python syntax errors or undefined names
        poetry run python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Lint with pylint
      run: |
        poetry run python -m pylint $(git ls-files '*.py') --max-line-length=88

    - name: Run black
      run: |
        poetry run python -m black . --check --verbose

    - name: Run isort
      run: |
        poetry run python -m isort .

    - name: Run mypy
      run: |
        poetry run python -m mypy .

    - name: Test with pytest
      run: |
        poetry run  python -m coverage run -m pytest tests/
        poetry run python -m coverage report
